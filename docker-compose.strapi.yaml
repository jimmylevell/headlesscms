version: "3"

services:
  strapi-test:
    image: strapi/strapi
    restart: unless-stopped
    environment:
      DATABASE_CLIENT: mongo
      DATABASE_NAME: strapi
      DATABASE_HOST: mongo-test
      DATABASE_PORT: 27017
      DATABASE_USERNAME: strapi
      DATABASE_PASSWORD: password
    networks:
      - strapi-app-network
      - traefik-public
    deploy:
        replicas: 1
        update_config:
          parallelism: 1
          delay: 10s
        restart_policy:
          condition: on-failure
        labels:
          - traefik.enable=true # enable traefik
          - traefik.docker.network=traefik-public # put it in the same network as traefik
          - traefik.constraint-label=traefik-public # assign the same label as traefik so it can be discovered
          - traefik.http.routers.strapi.rule=Host(`strapi.app.levell.ch`) # listen to port 80 for request to APP_DOMAIN (use together with the line below)
          - traefik.http.routers.strapi.entrypoints=http
          - traefik.http.routers.strapi.middlewares=https-redirect
          - traefik.http.middlewares.strapi.redirectscheme.scheme=https # redirect traffic to https
          - traefik.http.middlewares.strapi.redirectscheme.permanent=true # redirect traffic to https
          - traefik.http.routers.strapi-secured.rule=Host(`strapi.app.levell.ch`) # listen to port 443 for request to APP_DOMAIN (use together with the line below)
          - traefik.http.routers.strapi-secured.entrypoints=https
          - traefik.http.routers.strapi-secured.tls.certresolver=le # use the Let's Encrypt certificate we set up earlier
          - traefik.http.services.strapi-secured.loadbalancer.server.port=1337 # ask Traefik to search for port of the service container

  mongo-test:
    image: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: strapi
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - strapi-app-network
    volumes:
      - strapidata:/data/db

networks:
  strapi-app-network:
  traefik-public:
    external: true

volumes:
  strapidata:
